basePath: /
definitions:
  github_com_nadeem1815_premium-watch_pkg_domain.Admin:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
  github_com_nadeem1815_premium-watch_pkg_domain.Product:
    properties:
      brand:
        type: string
      colour:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      product_category_id:
        type: integer
      product_image:
        type: string
      sku:
        type: string
      stock:
        type: number
      updatedAt:
        type: string
    required:
    - brand
    - name
    - price
    - sku
    - stock
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.AddressInput:
    properties:
      district:
        type: string
      house_name:
        type: string
      landmark:
        type: string
      pincode:
        type: integer
      state:
        type: string
      street:
        type: string
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.AdminLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.CreatCoupon:
    properties:
      code:
        type: string
      discount_max_amount:
        type: number
      discount_percent:
        type: number
      min_order_value:
        type: number
      valid_till:
        type: string
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.NewCategory:
    properties:
      category_name:
        type: string
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.PlaceOrder:
    properties:
      payment_method_id:
        type: integer
      shipping_address_id:
        type: integer
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.RetrunRequest:
    properties:
      order_id:
        type: integer
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.UpdatCoupon:
    properties:
      discount_max_amount:
        type: number
      discount_percent:
        type: number
      id:
        type: integer
      min_order_value:
        type: number
      valid_till:
        type: string
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.UpdateOrder:
    properties:
      delivery_status_id:
        type: integer
      order_id:
        type: integer
      status_id:
        type: integer
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.UsarDataInput:
    properties:
      email_id:
        type: string
      name:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      phone:
        type: string
      surname:
        type: string
    required:
    - email_id
    - password
    - phone
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_model.UserLoginEmail:
    properties:
      email_id:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email_id
    - password
    type: object
  github_com_nadeem1815_premium-watch_pkg_utils_response.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: permium-watch.shop
info:
  contact:
    email: nadeemf408@gmail.com
    name: Nadeem Fahad
    url: https://github.com/Nadeem1815
  description: Ecommerce REST API built using Go Lang, PSQL, REST API following Clean
    Architecture. Hosted with Ngnix, AWS EC2 and RDS
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: Ecommerce REST API
  version: "1.0"
paths:
  /admin/all_categories:
    get:
      consumes:
      - application/json
      description: Admin, users and unregistered users can see all the available categories
      operationId: view-all-category
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: View All category
      tags:
      - Product Category
  /admin/all_product:
    get:
      consumes:
      - application/json
      description: Admin, users and unregistered users can see all the available products
      operationId: list-all-products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: List All Products
      tags:
      - Products
  /admin/block_user/:user_id:
    patch:
      consumes:
      - application/json
      description: Admin Blocked for user
      operationId: admin-block-user
      parameters:
      - description: ID of the user to be blocked
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Admin Blocked USer
      tags:
      - User
  /admin/creatcoupon:
    post:
      consumes:
      - application/json
      description: Admin can create new coupon
      operationId: create-coupon
      parameters:
      - description: New Coupon
        in: body
        name: createcoupon_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.CreatCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Create new Coupon
      tags:
      - Coupon
  /admin/create_categories:
    post:
      consumes:
      - application/json
      description: Admin can create new category from admin panel
      operationId: product-category
      parameters:
      - description: New category name
        in: body
        name: category_name
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.NewCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Create new product category
      tags:
      - Product Category
  /admin/create_product:
    post:
      consumes:
      - application/json
      description: Admin can create new products listing
      operationId: create-product
      parameters:
      - description: New product name
        in: body
        name: createproduct_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Create new product
      tags:
      - Products
  /admin/dashboard:
    get:
      consumes:
      - application/json
      description: Admin Can access dashboard and view details of recoding orders,products
        etc
      operationId: dash_board
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: DashBoard
      tags:
      - Admin
  /admin/delete/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint allows an admin user to delete a product by ID.
      operationId: Delete-Coupon
      parameters:
      - description: coupon_id
        in: path
        name: coupon_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Admin Remove Coupon
      tags:
      - Coupon
  /admin/delete_product/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint allows an admin user to delete a product by ID.
      operationId: Delete-product
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Admin Remove Product To Cart
      tags:
      - Products
  /admin/download:
    get:
      consumes:
      - application/json
      description: Admin can download total sales report in csv.format
      operationId: sales_report
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Sales Report
      tags:
      - Admin
  /admin/find_category_id/{id}:
    get:
      consumes:
      - application/json
      description: Admin, users and unregistered users can see all the available categories
      operationId: find-category-id
      parameters:
      - description: find category by id
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Find Category by id
      tags:
      - Product Category
  /admin/find_userid/:user_id:
    get:
      consumes:
      - application/json
      description: Admin Can Find All Register Users details find By user id
      operationId: find-user-id
      parameters:
      - description: ID of the user to be fetched
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Find User By Id
      tags:
      - Admin
  /admin/list_all_user:
    get:
      consumes:
      - application/json
      description: Admin Can List All Register Users
      operationId: list-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: List All Users
      tags:
      - Admin
  /admin/login/email:
    post:
      consumes:
      - application/json
      description: user
      operationId: user-wallet
      parameters:
      - description: Admin login credentials
        in: body
        name: admin_credentials
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Wallet
      tags:
      - User
  /admin/logout:
    post:
      consumes:
      - application/json
      description: Logs out a logged-in admin from the E-commerce web api admin panel
      operationId: admin-logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Admin Logout
      tags:
      - Admin
  /admin/register:
    post:
      consumes:
      - application/json
      description: New Admin Registration.
      operationId: admin-signup
      parameters:
      - description: 'Register Admin '
        in: body
        name: newAdmin
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_domain.Admin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Admin SignUp
      tags:
      - Admin
  /admin/unblock_user/:user_id:
    patch:
      consumes:
      - application/json
      description: Admin UnBlocked for user
      operationId: admin-unblock-user
      parameters:
      - description: ID of the user to be Unblocked
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Admin UnBlocked USer
      tags:
      - User
  /admin/update_product:
    patch:
      consumes:
      - application/json
      description: Admin Update products details
      operationId: update-product
      parameters:
      - description: 'update product '
        in: body
        name: updateproduct_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Update product
      tags:
      - Products
  /admin/updatecoupon:
    patch:
      consumes:
      - application/json
      description: Admin Update Coupon details
      operationId: update-coupon
      parameters:
      - description: 'update product '
        in: body
        name: updatecoupon_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.UpdatCoupon'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Update Coupon
      tags:
      - Coupon
  /admin/updateorder:
    put:
      consumes:
      - application/json
      description: Update order for Admin
      operationId: update-order
      parameters:
      - description: orderupdat
        in: body
        name: updating_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Update Order for Admin
      tags:
      - Order
  /admin/view:
    get:
      consumes:
      - application/json
      description: Admin, users and unregistered users can see all the available Coupon
      operationId: view-all-coupon
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: List All Coupon
      tags:
      - Coupon
  /user/addcoupon/{couponid}:
    post:
      consumes:
      - application/json
      description: User Can Add coupon To Cart
      operationId: add-coupon-to-cart
      parameters:
      - description: couponid
        in: path
        name: couponid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Can Add coupon To Cart
      tags:
      - Cart
  /user/address:
    post:
      consumes:
      - application/json
      description: User add address field
      operationId: user-addaddress
      parameters:
      - description: User add Address
        in: body
        name: user_address
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.AddressInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Add Address
      tags:
      - User
  /user/buy_all:
    post:
      consumes:
      - application/json
      description: User OrderProduct From Carts
      operationId: user-order-product
      parameters:
      - description: order Details
        in: body
        name: order_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.PlaceOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User BuyAllProduct from cart
      tags:
      - Order
  /user/cancelorder/{oderid}:
    put:
      consumes:
      - application/json
      description: User Order Cancel form order id
      operationId: cancelorder-orderid
      parameters:
      - description: orderid
        in: path
        name: orderid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Cancel Order from order id
      tags:
      - Order
  /user/cart/{product_id}:
    post:
      consumes:
      - application/json
      description: User Can add product To Cart
      operationId: user-add-to-cart-
      parameters:
      - description: product_item_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Add Product To Cart By ProductId
      tags:
      - Cart
  /user/carts:
    get:
      consumes:
      - application/json
      description: User Can View Cart and Total Amount
      operationId: View-cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Can View Cart and Total Amount
      tags:
      - Cart
  /user/coupon/{couponid}:
    get:
      consumes:
      - application/json
      description: Admin, users and registered users can see all the available coupon
      operationId: view-couponby-id
      parameters:
      - description: find coupon by id
        in: path
        name: viewcoupon_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: View Coupon by id
      tags:
      - Coupon
  /user/home:
    get:
      consumes:
      - application/json
      description: when login user can see home page
      operationId: home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: HomePage
      tags:
      - User
  /user/login/email:
    post:
      consumes:
      - application/json
      description: User login With Email
      operationId: login-with-email
      parameters:
      - description: User login credentials
        in: body
        name: User_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.UserLoginEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: LoginWithEmail
      tags:
      - User
  /user/logout:
    post:
      consumes:
      - application/json
      description: Logs out a logged-in user from the E-commerce web api user panel
      operationId: user-logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: User Logout
      tags:
      - User
  /user/payments/success:
    get:
      consumes:
      - application/json
      description: Handler for automatically updating payment details upon successful
        payment
      operationId: payment-success
      parameters:
      - description: Payment details
        in: query
        name: payment_ref
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Successfully updated payment details
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Failed to update payment details
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Handling successful payment
      tags:
      - Payment
  /user/razorpay/{order_id}:
    get:
      consumes:
      - application/json
      description: Users can make payment via Razorpay after placing orders
      operationId: create-razorpay-payment
      parameters:
      - description: Order id
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Users can make payment
      tags:
      - Payment
  /user/register:
    post:
      consumes:
      - application/json
      description: New User  can Registration.
      operationId: user-signup
      parameters:
      - description: Register User
        in: body
        name: user_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.UsarDataInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User SignUp
      tags:
      - User
  /user/remove/{product_id}:
    delete:
      consumes:
      - application/json
      description: User Can Remove product To Cart
      operationId: user-remove-to-cart-
      parameters:
      - description: product_item_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: User Remove Product To Cart By ProductId
      tags:
      - Cart
  /user/return:
    post:
      consumes:
      - application/json
      description: ReturnRequest From  users
      operationId: retrunreq-user
      parameters:
      - description: Return details
        in: body
        name: return_details
        required: true
        schema:
          $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_model.RetrunRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: ReturnRequest From  users
      tags:
      - Order
  /user/view:
    get:
      consumes:
      - application/json
      description: Endpoint for getting all orders associated with a user
      operationId: view-all-orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Retrieves all orders of currently logged in user
      tags:
      - Order
  /user/viewid/{order_id}:
    get:
      consumes:
      - application/json
      description: Endpoint for getting  specific orders associated with a user
      operationId: view-orderID
      parameters:
      - description: orderid
        in: path
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_nadeem1815_premium-watch_pkg_utils_response.Response'
      summary: Retrieves  ordersbyID of currently logged in user
      tags:
      - Order
schemes:
- https
swagger: "2.0"
